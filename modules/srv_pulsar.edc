/***************************** Mixer popup theme  *************************
 * This theme strongly use the script functionnality from edje.           *
 * The main idea is that the module send the current value of the mixer.  *
 * And the theme do as he wish with that value.                           * 
 **************************************************************************/
images {
   image: "modules/mixer/pulsar.png" COMP;
   image: "modules/mixer/vol.png" COMP;
}

// collections {
   group {
      data {
      item: "shaped" "1";
   }
      name: "e/modules/mixer/pulsar";
      max: 250 80;
      script {
         public vol_level;
         #define MSG_ID_SET_COUNTER 0

         public message (Msg_Type:type, id, ...)
         {
            switch (id) {
               case MSG_ID_SET_COUNTER: {
                  new args_left, lala;

                  args_left = numargs () - 2;
                  if (type == MSG_INT && args_left == 1) {
                     lala = getarg(2);
                     set_int(vol_level, lala);
                     if (lala >= 1) {
                        set_color_class("pulsar_color", 255, 255, 255, 255);
                     }
                     else {
                        set_color_class("pulsar_color", 255, 0, 0, 255);
                     }
                  }
               }
            }
         }
      }
      parts {
         part {
            name: "pulsar";
            type: IMAGE;
            description {
               state: "default" 0.0;
               visible: 1;
               aspect: 1 1;
               color_class: "pulsar_color";
               rel1 {
                  relative: 0 0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 0.5 1;
                  offset: 0 0;
               }
               image {
                  normal: "modules/mixer/pulsar.png";
               }
            }
            description {
               state: "full" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect : 1 1;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 5 0;
               }
               rel2 {
                  relative: 0.5 1.0;
                  offset: 0 0;
               }
               image {
                  normal: "modules/mixer/pulsar.png";
               }
            }
            description {
               state: "small" 0.0;
               inherit: "default" 0.0;
               aspect: 1 1;
               rel1 {
                  relative: 0.2 0.3;
                  offset: 5 1;
               }
               rel2 {
                  relative: 0.3 0.7;
                  offset: 0 1;
               }
               image {
                  normal: "modules/mixer/pulsar.png";
               }
            }
         }

#define VOL(NUM, REL, R1, R2) \
         part { \
            name: "vol"NUM; \
            type: IMAGE; \
            description { \
               state: "default" 0.0; \
               visible: 0; \
               aspect: 1 1; \
               color: 0 0 200 100; \
               rel1 { \
                  to: "pulsar"; \
                  relative: 0 0.3; \
                  offset: 5 0; \
               } \
               rel2 { \
                  to_x: "pulsar"; \
                  relative: 0 0.7; \
                  offset: 5 0; \
               } \
               image { \
                  normal: "modules/mixer/vol.png"; \
               } \
            } \
            description { \
               state: "inactive" 0.0; \
               visible: 1; \
               aspect: 1 1; \
               color: 0 0 200 100; \
               rel1 { \
                  to_x: REL; \
                  relative: 1 R1; \
                  offset: 2 0; \
               } \
               rel2 { \
                  to_x: REL; \
                  relative: 1 R2; \
                  offset: 2 0; \
               } \
               image { \
                  normal: "modules/mixer/vol.png"; \
               } \
            } \
            description { \
               state: "active" 0.0; \
               inherit: "inactive" 0.0; \
               color: 0 0 200 255; \
               image { \
                  normal: "modules/mixer/vol.png"; \
               } \
            } \
         } 
         VOL(1, "pulsar", 0.42, 0.58)
         VOL(2,  "vol1", 0.40, 0.60)
         VOL(3,  "vol2", 0.38, 0.62)
         VOL(4,  "vol3", 0.36, 0.64)
         VOL(5,  "vol4", 0.34, 0.66)
         VOL(6,  "vol5", 0.32, 0.68)
         VOL(7,  "vol6", 0.30, 0.70)
         VOL(8,  "vol7", 0.28, 0.72)
         VOL(9,  "vol8", 0.26, 0.74)
         VOL(10, "vol9", 0.24, 0.76)
      }
      programs {
         program {
            name: "start_loop";
            signal: "show";
            after: "go_small";
            script {
               set_int(vol_level, 0);
            }
         }
         program {
            name: "go_full";
            action: STATE_SET "full" 0.01;
            transition: DECELERATE 0.01;
            target: "pulsar";
            in: 1.0 0;
            after: "go_small";
         }
         program {
            name: "go_small";
            action: STATE_SET "small" 1.0;
            transition: DECELERATE 0.2;
            target: "pulsar";
            after: "go_full";
         }
         program {
            name: "mute_toggle";
            signal: "muted";
            source: "*";
            script {
               set_color_class("pulsar_color", 255, 0, 0, 255);
            }
         }

#define DESACTIVE_VOL(NUM) \
         program { \
            name: "desactive_vol"NUM; \
            action: STATE_SET "inactive" 0.0; \
            transition: LINEAR 0.5; \
            target: "vol"NUM; \
         }
#define INACTIVE_VOL(NUM) \
         program { \
            name: "inactive_vol"NUM; \
            action: STATE_SET "inactive" 0.0; \
            transition: LINEAR 0.5; \
            target: "vol"NUM; \
            after: "active_vol"NUM; \
         }
#define ACTIVE_VOL(NUM) \
         program { \
            name: "active_vol"NUM; \
            action: STATE_SET "active" 0.0; \
            transition: LINEAR 0.5; \
            target: "vol"NUM; \
         }

         DESACTIVE_VOL(1)
         DESACTIVE_VOL(2)
         DESACTIVE_VOL(3)
         DESACTIVE_VOL(4)
         DESACTIVE_VOL(5)
         DESACTIVE_VOL(6)
         DESACTIVE_VOL(7)
         DESACTIVE_VOL(8)
         DESACTIVE_VOL(9)
         DESACTIVE_VOL(10)
         INACTIVE_VOL(1)
         INACTIVE_VOL(2)
         INACTIVE_VOL(3)
         INACTIVE_VOL(4)
         INACTIVE_VOL(5)
         INACTIVE_VOL(6)
         INACTIVE_VOL(7)
         INACTIVE_VOL(8)
         INACTIVE_VOL(9)
         INACTIVE_VOL(10)
         ACTIVE_VOL(1)
         ACTIVE_VOL(2)
         ACTIVE_VOL(3)
         ACTIVE_VOL(4)
         ACTIVE_VOL(5)
         ACTIVE_VOL(6)
         ACTIVE_VOL(7)
         ACTIVE_VOL(8)
         ACTIVE_VOL(9)
         ACTIVE_VOL(10)
         program {
            name: "vol_increase";
            signal: "vol,increase";
            source: "*";
            after: "set_vol";
         }
         program {
            name: "vol_decrease";
            signal: "vol,decrease";
            source: "*";
            after: "set_vol";
         }
         program {
            name: "set_vol";
            script {
               new visible;
               get_state_val(PART:"vol1", STATE_VISIBLE, visible);
               if (get_int(vol_level) == 0 && visible == 1) {
                  run_program(PROGRAM:"desactive_vol1");
               }
               else if (get_int(vol_level) > 0) {
                  custom_state(PART:"vol1", "default", 0.0);
                  set_state_val(PART:"vol1", STATE_VISIBLE, 1); 
                  run_program(PROGRAM:"active_vol1");
               }
               visible = 0;
               get_state_val(PART:"vol2", STATE_VISIBLE, visible);
               if (get_int(vol_level) < 10 && visible == 1) {
                  run_program(PROGRAM:"desactive_vol2");
               }
               else if (get_int(vol_level) > 10) {
                  custom_state(PART:"vol2", "default", 0.0);
                  set_state_val(PART:"vol2", STATE_VISIBLE, 1); 
                  run_program(PROGRAM:"active_vol2");
               }
               visible = 0;
               get_state_val(PART:"vol3", STATE_VISIBLE, visible);
               if (get_int(vol_level) < 20 && visible == 1)
                  run_program(PROGRAM:"desactive_vol3");
               else if (get_int(vol_level) > 20) {
                  custom_state(PART:"vol3", "default", 0.0);
                  set_state_val(PART:"vol3", STATE_VISIBLE, 1); 
                  run_program(PROGRAM:"active_vol3");
               }
               visible = 0;
               get_state_val(PART:"vol4", STATE_VISIBLE, visible);
               if (get_int(vol_level) < 30 && visible == 1)
                  run_program(PROGRAM:"desactive_vol4");
               else if (get_int(vol_level) > 30) {
                  custom_state(PART:"vol4", "default", 0.0);
                  set_state_val(PART:"vol4", STATE_VISIBLE, 1); 
                  run_program(PROGRAM:"active_vol4");
               }
               visible = 0;
               get_state_val(PART:"vol5", STATE_VISIBLE, visible);
               if (get_int(vol_level) < 40 && visible == 1)
                  run_program(PROGRAM:"desactive_vol5");
               else if (get_int(vol_level) > 40) {
                  custom_state(PART:"vol5", "default", 0.0);
                  set_state_val(PART:"vol5", STATE_VISIBLE, 1); 
                  run_program(PROGRAM:"active_vol5");
               }
               visible = 0;
               get_state_val(PART:"vol6", STATE_VISIBLE, visible);
               if (get_int(vol_level) < 50 && visible == 1)
                  run_program(PROGRAM:"desactive_vol6");
               else if (get_int(vol_level) > 50) {
                  custom_state(PART:"vol6", "default", 0.0);
                  set_state_val(PART:"vol6", STATE_VISIBLE, 1); 
                  run_program(PROGRAM:"active_vol6");
               }
               visible = 0;
               get_state_val(PART:"vol7", STATE_VISIBLE, visible);
               if (get_int(vol_level) < 60 && visible == 1)
                  run_program(PROGRAM:"desactive_vol7");
               else if (get_int(vol_level) > 60) {
                  custom_state(PART:"vol7", "default", 0.0);
                  set_state_val(PART:"vol7", STATE_VISIBLE, 1); 
                  run_program(PROGRAM:"active_vol7");
               }
               visible = 0;
               get_state_val(PART:"vol8", STATE_VISIBLE, visible);
               if (get_int(vol_level) < 70 && visible == 1)
                  run_program(PROGRAM:"desactive_vol8");
               else if (get_int(vol_level) > 70) {
                  custom_state(PART:"vol8", "default", 0.0);
                  set_state_val(PART:"vol8", STATE_VISIBLE, 1); 
                  run_program(PROGRAM:"active_vol8");
               }
               visible = 0;
               get_state_val(PART:"vol9", STATE_VISIBLE, visible);
               if (get_int(vol_level) < 80 && visible == 1)
                  run_program(PROGRAM:"desactive_vol9");
               else if (get_int(vol_level) > 80) {
                  custom_state(PART:"vol9", "default", 0.0);
                  set_state_val(PART:"vol9", STATE_VISIBLE, 1); 
                  run_program(PROGRAM:"active_vol9");
               }
               visible = 0;
               get_state_val(PART:"vol10", STATE_VISIBLE, visible);
               if (get_int(vol_level) < 90 && visible == 1)
                  run_program(PROGRAM:"desactive_vol10");
               else if (get_int(vol_level) > 90) {
                  custom_state(PART:"vol10", "default", 0.0);
                  set_state_val(PART:"vol10", STATE_VISIBLE, 1); 
                  run_program(PROGRAM:"active_vol10");
               }
            }
         }
      }
   }
// }
