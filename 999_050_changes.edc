        
/*
made the following changes and forgot about the rest (lol):

   +alias: "e/fileman/default/list/variable";
   +part { name: "dnd_action";
   +alias: "e/fileman/default/list_odd/variable";
   +part { name: "dnd_action";  - also added to desktop icons (any icons displayed for a proper D'n'D)
   +alias: "e/fileman/desktop/overlay";
   +alias: "e/fileman/desktop/list/drop_between";
   +alias: "e/fileman/desktop/list/drop_in";
   
        separate groups named  "e/widgets/ilist_header"  and  "e/widgets/ilist_header_odd";
*/

////   block of code for icon theme - NEW DEFAULT THEME   ///

#define ICON(NAME, FILE, SIZE)                          \
group { name: "e/icons/"NAME ;                          \
   max: SIZE SIZE;                                      \
   parts {                                              \
          part { name: "icon";                              \
         mouse_events:  0;                              \
         description { state: "default" 0.0;            \
                aspect: 1.0 1.0;                            \
                aspect_preference: BOTH;                    \
                image.image: FILE COMP;                     \
                image.normal: FILE ;                        \
         }                                              \
          }                                                 \
   }                                                    \
}


ICON("enlightenment/website","./icons/network_local.png",64)
ICON("enlightenment/background","./icons/demo.png",64)
ICON("enlightenment/picture","./icons/demo.png",64)
ICON("enlightenment/gradient","./icons/icon_gradient.png",64)
// ICON("enlightenment/e","e17_clock_bg.png",64)
ICON("enlightenment/about","./icons/demo.png",64)
ICON("enlightenment/mixer","modules/mixer/pulsar.png",999)

ICON("enlightenment/check","./icons/ok.png",64)
ICON("widget/swap","./icons/e17_icon_fileman_131.png",64)
ICON("widget/del","./icons/trashcan_full.png",64)
ICON("widget/new","./icons/bookmark.png",64)
ICON("widget/add","./icons/e17_icon_fileman_28.png",64)
ICON("widget/add_fav","./icons/bookmark.png",64)
ICON("widget/up_arrow","./icons/up.png",64)
ICON("widget/down_arrow","./icons/down.png",64)
ICON("widget/up_dir","./icons/top.png",64)
ICON("widget/new_dialog","./icons/next.png",64)
ICON("widget/config","./icons/advancedsettings.png",64)
ICON("widget/resize","./icons/icon_resize.png",64)

/// No icons made yet ///

ICON("enlightenment/engine","e17_icon_advanced.png",64)
ICON("enlightenment/add_application","./icons/bookmark.png",64)
ICON("enlightenment/profiles","./icons/applications-other.png",64)
ICON("enlightenment/scale","./icons/e17_icon_fileman_22.png",64)
ICON("enlightenment/autoscroll","./icons/viewmag1.png",64)
ICON("enlightenment/showhide","./icons/laptop.png",64)
ICON("enlightenment/toolbar","./icons/start-here1.png",64)

ICON("enlightenment/settings","./icons/advancedsettings.png",64)

#define BORDERICON(NAME, FILE)                          \
group { name: "e/widgets/border/default/"NAME ;         \
   parts {                                              \
      part { name: "icon";                              \
         mouse_events:  0;                              \
         description { state: "default" 0.0;            \
            aspect: 1.0 1.0;                            \
            aspect_preference: BOTH;                    \
            image.image: FILE COMP;                     \
            image.normal: FILE ;                        \
         }                                              \
      }                                                 \
   }                                                    \
}

BORDERICON("basic","./icons/e17_button_detail_more.png")
/*
BORDERICON("close","icon_border_close.png")
BORDERICON("kill","icon_border_kill.png")
BORDERICON("stacking","icon_border_stack_norm.png")
BORDERICON("stack_on_top","icon_border_stack_top.png")
BORDERICON("stack_normal","icon_border_stack_norm.png")
BORDERICON("stack_below","icon_border_stack_bot.png")
BORDERICON("maximize","icon_border_maximize.png")
BORDERICON("fullscreen","icon_border_maximize.png")
BORDERICON("minimize","icon_border_minimize.png")
BORDERICON("stick","icon_border_pin.png")
BORDERICON("sendto","icon_border_sendto.png")
BORDERICON("skip","icon_border_skip.png")
BORDERICON("skip_pager","icon_border_pager.png")
BORDERICON("skip_taskbar","icon_border_skip.png")
BORDERICON("skip_winlist","icon_border_skip.png")
BORDERICON("borderless","icon_border_border.png")
BORDERICON("remember","icon_border_remember.png")
BORDERICON("shade","icon_border_shaded.png")
BORDERICON("locks","icon_border_lock.png")
BORDERICON("locks_user","icon_border_lock.png")
BORDERICON("locks_application","icon_border_lock.png")
BORDERICON("properties","icon_border_properties.png")
*/

// EFM icons //

#define EFMICON(NAME, FILE, SIZE)                       \
group { name: "e/icons/fileman/"NAME;                   \
   max:  SIZE SIZE;                                     \
   parts {                                              \
      part { name: "icon";                              \
         mouse_events:  0;                              \
         description { state: "default" 0.0;            \
            aspect: 1.0 1.0;                            \
            aspect_preference: BOTH;                    \
            image.image: FILE COMP;                     \
            image.normal: FILE ;                        \
         }                                              \
      }                                                 \
   }                                                    \
}

//EFMICON("folder","icon_efm_folder.png", 256)
//EFMICON("file","icon_efm_file.png", 256)
EFMICON("home","./icons/folder_home.png", 256)
EFMICON("root","./icons/laptop.png", 256)
EFMICON("tmp","./icons/clock.png", 256)
EFMICON("trash","e17_icon_fileman_trash.png", 256)
ICON("enlightenment/mail","modules/mail/module_icon.png",256)
EFMICON("mail","modules/mail/module_icon.png", 256)
EFMICON("desktop","e17_icon_background.png", 256)
//EFMICON("hdd","icon_efm_hdd.png", 256)
//EFMICON("hd","icon_efm_hdd.png", 256)

// ICON("drive-harddisk","./icons/e17_icon_fileman_drive-harddisk.png", 256)
// ICON("drive-optical","e17_icon_fileman_drive-optical.png", 256)

ICON("drive-harddisk","e17_icon_fileman_drive-harddisk.png", 256)
ICON("drive-optical","e17_icon_fileman_drive-optical.png", 256)


color_classes  {
        color_class {
                name:  "COPY_COLOR";
                color:  58  167  215 255;
                //color:  255 255 255 255;
        }
        color_class {
                name:  "ASK_COLOR";
                color:  255  208  0 255;
                //color:  255 255 255 255;
        }
        color_class {
                name:  "VISIBLE_COLOR";
                //color:  255  208  0 255;
                color:  255 255 255 255;
        }
        color_class {
                name:  "MOVE_COLOR";
                color:  177  0  0 255;
                //color:  255 255 255 255;
        }
        color_class {
                name:  "TASKBAR_BG";
                color:  28 29 33 32;
        }
        color_class {
                name:  "TASKBAR_ITEMS";
                color:  28 29 33 100;
        }
        color_class {
                name:  "TASKBAR_ITEMS_BORDER";
                color:  255 255 255  80;
        }
        color_class {
                name:  "TASKBAR_FONT";
                color:  255 255 255 255;
        }
        color_class {
                name:  "TASKBAR_CLIP_FADE_COLOR";
                color:  255 255 255 64;
        }
        color_class {
                name:  "TASKBAR_CLIP_COLOR";
                color:  255 255 255 255;
        }
        color_class {
                name:  "HIGHLIGHT_FILES";
                //color:  102 152 203 255;
                color:   108  108  108  255;
        }
        color_class {
                name:  "HIGHLIGHT_FILES_BORDER";
                //color:  102 152 203 255;
                color:   255 255 255 255;
        }
        color_class {
                name:  "URGENT_WINDOW";
                color:   177 0 0 255;
        }
        color_class {
                name:  "TRANSPARENT";
                color:  0 0 0 0;
        }
        color_class {
                name:  "WHITE";
                color:  255 255 255 255;
        }
        color_class {
                name: "INIT_TEXT";
                color:  255 255 255 255;
        }
        color_class {
                name:  "NORMAL_TEXT";
                color:  0 0 0 255;
        }
        color_class {
                name:  "TOOLBAR_BG";
                color:  28 29 33 32;
        }
        color_class {
                name:  "TOOLBAR_ITEMS";
                color:  28 29 33 100;
        }
        color_class {
                name:  "TOOLBAR_ITEMS_BORDER";
                color:  255 255 255  80;
        }
        color_class {
                name:  "TOOLBAR_FONT";
                color:  255 255 255  255;
        }
        color_class {
                name:  "TOOLBAR_FONT_INACTIVE";
                // color:  0  0  0  255;
                color:  255 255 255  255;
        }
        color_class {
                name:  "TOOLBAR_FONT_SELECTED";
                color:  255 255 255  255;
        }
}

// Taskbar module
                


#define TASKBAR_BORDERS(NAME) \
part  { \
        name:  NAME"_border_top"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  0  1; \
                max:  999999  1; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  0.0  0.0; \
                rel1.offset:                 0          0;  \
                rel1.to:        NAME;  \
                rel2.relative:  1.0  0.0; \
                rel2.offset:                 -1          1;  \
                rel2.to:        NAME;  \
                color_class:   "TASKBAR_ITEMS"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "INTERNAL_OUTLINE_BORDER"; }} \
part  { \
        name:  NAME"_border_left"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  1  0; \
                max:  1  999999 ; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  0.0  0.0; \
                rel1.offset:                 0          0;  \
                rel1.to:        NAME;  \
                rel2.relative:  0.0  1.0; \
                rel2.offset:                 1          -1;  \
                rel2.to:        NAME;  \
                color_class:   "TRANSPARENT"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "INTERNAL_OUTLINE_BORDER"; }} \
part  { \
        name:  NAME"_border_bottom"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  0  1; \
                max:  999999  1; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  0.0  1.0; \
                rel1.offset:                 1          -1;  \
                rel1.to:        NAME;  \
                rel2.relative:  1.0  1.0; \
                rel2.offset:                 -1          -1;  \
                rel2.to:        NAME;  \
                color_class:   "TASKBAR_ITEMS"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "INTERNAL_OUTLINE_BORDER"; }} \
part  { \
        name:  NAME"_border_right"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  1  0; \
                max:  1  999999 ; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  1.0  0.0; \
                rel1.offset:                 -1          0;  \
                rel1.to:        NAME;  \
                rel2.relative:  1.0  1.0; \
                rel2.offset:                 -1          -1;  \
                rel2.to:        NAME;  \
                color_class:   "TRANSPARENT"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "INTERNAL_OUTLINE_BORDER"; }}



#define TASKBAR_ITEMS_BORDERS(NAME) \
part  { \
        name:  NAME"_bd_top_in"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  0  2; \
                max:  999999  2; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  0.0  0.0; \
                rel1.offset:                 2          0;  \
                rel1.to:        NAME;  \
                rel2.relative:  1.0  0.0; \
                rel2.offset:                 -3          2;  \
                rel2.to:        NAME;  \
                color_class:   "TASKBAR_ITEMS_BORDER"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "ACTIVE_BORDER"; } \
                description { state:    "focused" 0.0; inherit:    "default" 0.0; color_class:   "HIGHLIGHT_FILES_BORDER"; } \
                description { state:    "active" 0.0; inherit:    "default" 0.0; visible: 1; color_class:   "URGENT_WINDOW"; }} \
part  { \
        name:  NAME"_bd_left_in"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  2  0; \
                max:  2  999999 ; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  0.0  0.0; \
                rel1.offset:                 0          0;  \
                rel1.to:        NAME;  \
                rel2.relative:  0.0  1.0; \
                rel2.offset:                 2          -1;  \
                rel2.to:        NAME;  \
                color_class:   "TASKBAR_ITEMS_BORDER"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "ACTIVE_BORDER"; } \
                description { state:    "focused" 0.0; inherit:    "default" 0.0; color_class:   "HIGHLIGHT_FILES_BORDER"; } \
                description { state:    "active" 0.0; inherit:    "default" 0.0; visible: 1; color_class:   "URGENT_WINDOW"; }} \
part  { \
        name:  NAME"_bd_bottom_in"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  0  2; \
                max:  999999  2; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  0.0  1.0; \
                rel1.offset:                 2          -2;  \
                rel1.to:        NAME;  \
                rel2.relative:  1.0  1.0; \
                rel2.offset:                 -3          -1;  \
                rel2.to:        NAME;  \
                color_class:   "TASKBAR_ITEMS_BORDER"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "SCROLLBAR_BORDER_DISABLED"; } \
                description { state:    "focused" 0.0; inherit:    "default" 0.0; color_class:   "HIGHLIGHT_FILES_BORDER"; } \
                description { state:    "active" 0.0; inherit:    "default" 0.0; visible: 1; color_class:   "URGENT_WINDOW"; }} \
part  { \
        name:  NAME"_bd_right_in"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  2  0; \
                max:  2  999999 ; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  1.0  0.0; \
                rel1.offset:                 -2          0;  \
                rel1.to:        NAME;  \
                rel2.relative:  1.0  1.0; \
                rel2.offset:                 -1         -1;  \
                rel2.to:        NAME;  \
                color_class:   "TASKBAR_ITEMS_BORDER"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "SCROLLBAR_BORDER_DISABLED"; } \
                description { state:    "focused" 0.0; inherit:    "default" 0.0; color_class:   "HIGHLIGHT_FILES_BORDER"; } \
                description { state:    "active" 0.0; inherit:    "default" 0.0; visible: 1; color_class:   "TRANSPARENT"; }}




#define TASKBAR_ITEMS_BORDERS_URGENT(NAME) \
part  { \
        name:  NAME"_bd_top"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  0  2; \
                max:  999999  2; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  0.0  0.0; \
                rel1.offset:                 2          0;  \
                rel1.to:        NAME;  \
                rel2.relative:  1.0  0.0; \
                rel2.offset:                 -3          2;  \
                rel2.to:        NAME;  \
                color_class:   "TRANSPARENT"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "ACTIVE_BORDER"; } \
                description { state:    "focused" 0.0; inherit:    "default" 0.0; color_class:   "HIGHLIGHT_FILES_BORDER"; } \
                description { state:    "active" 0.0; inherit:    "default" 0.0; visible: 1; color_class:   "URGENT_WINDOW"; }} \
part  { \
        name:  NAME"_bd_left"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  2  0; \
                max:  2  999999 ; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  0.0  0.0; \
                rel1.offset:                 0          0;  \
                rel1.to:        NAME;  \
                rel2.relative:  0.0  1.0; \
                rel2.offset:                 2          -1;  \
                rel2.to:        NAME;  \
                color_class:   "TRANSPARENT"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "ACTIVE_BORDER"; } \
                description { state:    "focused" 0.0; inherit:    "default" 0.0; color_class:   "HIGHLIGHT_FILES_BORDER"; } \
                description { state:    "active" 0.0; inherit:    "default" 0.0; visible: 1; color_class:   "URGENT_WINDOW"; }} \
part  { \
        name:  NAME"_bd_bottom"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  0  2; \
                max:  999999  2; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  0.0  1.0; \
                rel1.offset:                 2          -2;  \
                rel1.to:        NAME;  \
                rel2.relative:  1.0  1.0; \
                rel2.offset:                 -3          -1;  \
                rel2.to:        NAME;  \
                color_class:   "TRANSPARENT"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "SCROLLBAR_BORDER_DISABLED"; } \
                description { state:    "focused" 0.0; inherit:    "default" 0.0; color_class:   "HIGHLIGHT_FILES_BORDER"; } \
                description { state:    "active" 0.0; inherit:    "default" 0.0; visible: 1; color_class:   "URGENT_WINDOW"; }} \
part  { \
        name:  NAME"_bd_right"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  2  0; \
                max:  2  999999 ; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  1.0  0.0; \
                rel1.offset:                 -2          0;  \
                rel1.to:        NAME;  \
                rel2.relative:  1.0  1.0; \
                rel2.offset:                 -1         -1;  \
                rel2.to:        NAME;  \
                color_class:   "TRANSPARENT"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "SCROLLBAR_BORDER_DISABLED"; } \
                description { state:    "focused" 0.0; inherit:    "default" 0.0; color_class:   "HIGHLIGHT_FILES_BORDER"; } \
                description { state:    "active" 0.0; inherit:    "default" 0.0; visible: 1; color_class:   "URGENT_WINDOW"; }}


  
   group {
      name: "modules/taskbar/item";
      parts {
         // app icon clip
         part {
            name:          "item_clip";
            type: RECT;
            description {
               state:    "default" 0.0;
               color_class:         "TASKBAR_CLIP_COLOR";
            }
            description {
               state:    "faded" 0.0;
               color_class:         "TASKBAR_CLIP_FADE_COLOR";
            }
         }
         part {
            name:          "bg";
            type: RECT;
            description {
               state:    "default" 0.0;
               color_class:         "TASKBAR_BG";
            }
         }
                 
                 TASKBAR_BORDERS("bg");
                 
         part {
            name:          "button_image";
            type: RECT;
            mouse_events:  1;
            description {
               state:    "default" 0.0;
               //min:      56 16;
               // bigger so we have some room for text - fuck it
               min:      1 12;
                                align:         0.5  0.5;
               color_class:         "TASKBAR_ITEMS";
               rel1 {
                  relative: 0.0 0.0;
                                  offset:   1   4;
               }
               rel2 {
                  relative: 1.0 1.0;
                                  offset:  -2  -5;
               }
            }
            description {
               state:    "iconified" 0.0;
               inherit:  "default" 0.0;
               rel1 {
                  relative: 0.0 0.3;
                                  offset:   0   4;
               }
            }
            description {
               state:    "focused" 0.0;
               inherit:  "default" 0.0;
            }
         }
                 
                 TASKBAR_ITEMS_BORDERS("button_image");
                 TASKBAR_ITEMS_BORDERS_URGENT("button_image");

         // icon display region on button
         part {
            name:          "item";
            type: SWALLOW;
            mouse_events:  0;
            clip_to:       "item_clip";
            description {
               state:    "default" 0.0;
               aspect:   1.0 1.0;
               aspect_preference: BOTH;
               align:    0.0 0.5;
               rel1 {
                  relative: 0.0  0.0;
                  to: "button_image";
                  offset:   6   8;
               }
               rel2 {
                  relative: 1.0  1.0;
                  to: "button_image";
                  offset:   5   -9;
               }
               // don't let it grow to large
               max: 16 16;
            }
         }
         part {      
            name: "label";
            type: TEXT;
            scale: 1;
            effect: NONE;                  
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 1.0  0.0;
                  offset:   0    8;
                  to_x: "item";
                  to_y: "button_image";
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset:   -8    -8;
                  to: "button_image";
               }
               // text color on button face
                                color_class:  "TASKBAR_FONT";
               text {
                  text: "Icon Name";
                                  font: "Sans:style=Bold";
                  size:  11;
                  align:  0.5 0.5;
                  min:  0 1;
                  text_class:  "module_normal";
               }
            }
         }
         part {
            name:          "over";
            type: RECT;
            repeat_events: 0;
            mouse_events: 1;
            description {
               state:    "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name:    "iconified";
            signal:  "iconified";
            source:  "";
            action:  STATE_SET "iconified" 0.0;
            transition: LINEAR 0.0;
            target:  "button_image";
         }
         program {
            name:    "uniconified";
            signal:  "uniconified";
            source:  "";
            action:  STATE_SET "focused" 0.0;
            transition: LINEAR 0.0;
            target:  "button_image";
            target:  "button_image_bd_top_in";
            target:  "button_image_bd_left_in";
            target:  "button_image_bd_right_in";
            target:  "button_image_bd_bottom_in";
         }
         program {
            name:    "urgent";
            signal:  "urgent";
            source:  "";
            after: "go_urgent";
         }
         program {
            name:    "go_urgent";
            action:  STATE_SET "active" 0.0;
            transition: LINEAR 0.5;
            target:  "button_image_bd_top";
            target:  "button_image_bd_left";
            target:  "button_image_bd_right";
            target:  "button_image_bd_bottom";
            after: "go_urgent2";
         }
         program {
            name:    "go_urgent2";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 0.5;
            target:  "button_image_bd_top";
            target:  "button_image_bd_left";
            target:  "button_image_bd_right";
            target:  "button_image_bd_bottom";
            after: "go_urgent";
         }
         program {
            name:    "not_urgent";
            signal:  "not_urgent";
            source:  "";
            action:  ACTION_STOP;
            target:  "go_urgent";
            target:  "go_urgent2";
            target:  "go_not_urgent";
                        after: "go_not_urgent";
         }
         program {
            name:    "go_not_urgent";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 0.5;
            target:  "button_image_bd_top";
            target:  "button_image_bd_left";
            target:  "button_image_bd_right";
            target:  "button_image_bd_bottom";
         }

         program {
            name:    "focused";
            signal:  "focused";
            source:  "";
            action:  STATE_SET "focused" 0.0;
            transition: LINEAR 0.5;
            target:  "button_image_bd_top_in";
            target:  "button_image_bd_left_in";
            target:  "button_image_bd_right_in";
            target:  "button_image_bd_bottom_in";
         }
         program {
            name:    "unfocused";
            signal:  "unfocused";
            source:  "";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 0.5;
            target:  "button_image_bd_top_in";
            target:  "button_image_bd_left_in";
            target:  "button_image_bd_right_in";
            target:  "button_image_bd_bottom_in";
         }
      }
   }
   
   // Splash screen
  
images {
   image: "hslider_bar_progress.png" COMP;
   image: "scrollbar_hdrag1_progress.png" COMP;
}
   /* this first group is used for the primary screen (or only screen) so in
    * a multi-monitor setup whichever is first (screen 0) will get this
    * splash on it */
   group {
      name: "e/init/splash";
      script {
         public is_ready;
         public do_end;
      }
      parts {
         /* splash is fullscreen so we want a background of some sort. we have
          * taken the default desktop wallpaper here as it should look nice */
      part {
         name: "background_image";
         description {
            state: "default" 0.0;
            align: 0.5 0.5;
            image {
               normal: "grill_dark_tiny_pattern.png";
            }
            fill {
               size {
                  relative: 0 0;
                  offset:   144 144;
                }
             }
         }
      }

         part {
            name: "busy";
            mouse_events:  0;
            description {
               state: "default" 0.0;
               min: 300 19;
               max: 300 19;
               aspect: 1.0 1.0;
               align: 0.5  0.5;
               aspect_preference: VERTICAL;
               rel1 {
                  to:     "logo";
                  relative: 0.5 1.0;
                  offset:   -150  10;
               }
          rel2 {
                  to:     "logo";
                  relative: 0.5 1.0;
                  offset:   150  29;
               }
            image                normal: "hslider_bar_progress.png";
                border: 10 10 0 0;
            }
            fill {
               smooth: 0;
            }
         }
      }
      part {
         name: "background_23Oz_tint";
          type: RECT;
         description {
            state: "default" 0.0;
            align: 0.5 0.5;
                color: 15 15 15 200;
         }
      }
      part {
        name: "logo";
        description {
            state: "default" 0.0;
            rel1 {
                relative: 0.5 0.5;
                offset: -175 -175;
            }
            rel2 {
                relative: 0.5 0.5;
                offset: 175 175;
            }
            image {
                normal: "wrk/E_Logo_1.png";
            }
        }
      }

                part {
            name: "e.text.title";
            type: TEXT;
            scale: 1;
            effect: NONE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               rel1 {
                  relative: 0.5  0.5;
                  offset: 0 0;
                  to: "logo";
               }
               rel2 {
                  relative: 0.5  0.5;
                  offset:   0  0;
                  to: "logo";
               }
                  color_class:  "INIT_TEXT";
               text {
                  text: "Enlightenment";
          font:         "Sans:style=Bold,Sans:style=Bold";
                  size: 20;
                  min:  1 1;
                  align: 0.5 0.5;
                  text_class: "init_title";
               }
            }
         }
         part {
            name: "e.text.version";
            type: TEXT;
            scale: 1;
            effect: NONE;
            description {
               state: "default" 0.0;
               align: 1.0 1.0;
               rel1 {
                  relative: 1.0 1.0;
                  offset:   -2  -2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset:   -2  -2;
               }
                        color_class:  "INIT_TEXT";
               text {
                  text: "0.17.0";
                  font: "Sans";
                  size: 12;
                  min:  1 1;
                  align: 0.0 0.0;
                  text_class: "init_version";
               }
            }
         }
         part {
            name: "e.text.status";
            type: TEXT;
            scale: 1;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset:   0   1;
                  to: "e.text.title";
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset:   -1   1;
                  to: "e.text.title";
               }
                        color_class:  "INIT_TEXT";
               text {
                  text: "Starting Enlightenment. Please wait.";
                  font: "Sans:style=Bold";
                  size: 12;
                  min:  1 1;
                  align: 0.5 0.5;
                  text_class: "init_text";
               }
            }
         }
         part {
            name: "e.text.disable_text";
            type: TEXT;
            scale: 1;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.0 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset:   8   8;
               }
               rel2 {
                  relative: 0.0 0.0;
                  offset:   8   8;
               }
                        color_class:  "INIT_TEXT";
               text {
                  text: "Disable this splash screen in future.";
                  font: "Sans";
                  size: 12;
                  min:   1 1;
                  align: 0.0 0.0;
                  text_class: "init_text";
               }
            }
         }
         part {
            name: "disable_check";
                 mouse_events:  0;
                 type: TEXT;
                 scale: 1;
            description {
               state: "default" 0.0;
               min: 20 20;
               max: 20 20;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  offset:   0 0;
                  to: "e.text.disable_text";
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset:   0  -1;
                  to: "e.text.disable_text";
               }
                        color_class:  "NORMAL_TEXT";
                        text {
                           text:     "✔"; 
                           font:         "Sans:style=Bold";
                           size:     16;
                           min:      1 1;
                           align:    0.5 0.5;
                                text_class: "init_text_checkbox";               
                        }
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
                        color_class:  "INIT_TEXT";
            }
         }
         part {
            name: "enable_event";
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 0 0 0 0;
               rel1 {
                  to: "e.text.disable_text";
                  relative: 0.0 0.0;
                  offset:   -5 -5;
               }
               rel2 {
                  to: "disable_check";
                  relative: 1.0 1.0;
                  offset:   4 4;
               }
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "disable_event";
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 1;
               color: 0 0 0 0;
               rel1 {
                  to: "e.text.disable_text";
                  relative: 0.0 0.0;
                  offset:   -5 -5;
               }
               rel2 {
                  to: "disable_check";
                  relative: 1.0 1.0;
                  offset:   4 4;
               }
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
      part {
         name: "confine";
         type: RECT;
         description {
            state: "default" 0.0;
            visible: 1;
            rel1 {
               relative: 0.0 0.0;
               to: "busy";
            }
            rel2 {
               relative: 1.0 1.0;
               to: "busy";
            }
         }
                 description { state:  "done" 0.0;  inherit:  "default" 0.0;  visible: 0;  color_class: "TRANSPARENT"; }
      }
         part {
            name:  "busy_go";
            mouse_events:  0;
                clip_to: "confine";
             description {
               state: "default" 0.0;
                    visible:  1;
               min: 56 17;
               max: 56 17;
               aspect: 1.0 1.0;
               align: 0.5  0.5;
               aspect_preference: VERTICAL;
               rel1 {
                  to:     "busy";
                   //offset:  -1    -1;
                   relative:  0.0  0.0; 
               }
          rel2 {
                  to:     "busy";
                  relative:  0.0  1.0;
                  offset:  56    0;
               }
            image { 
               normal: "scrollbar_hdrag1_progress.png";
                border: 7 7 0 0; 
            } 
            }
                description { state:  "go" 0.0; inherit:  "default" 0.0;  rel2.relative:  1.0  1.0;  rel2.offset:  -1  -1;  rel1.relative:  1.0  0.0;  rel1.offset:  -57  1; }
         }
      part {
         name: "label_text_progressbar";
         type: TEXT;
         scale: 1;
         clip_to: "confine";
         mouse_events: 0;
         description {
            state: "default" 0.0;
                        color: 255 255 255 255;
            rel1 {
               relative: 0.0 0.0;
               offset: 4 3;
               to: "busy";
            }
            rel2 {
               relative: 1.0 1.0;
               offset: -5 -3;
               to: "busy";
            }
            text {
               text: "Loading...";
               font: "Sans";
                                min:  1  1;
               size:  10;
               align: 0.5 0.5;
            }
         }
      }

      }
      programs {
         program {
            name: "init";
            signal: "load";
            source: "";
            script {
               set_int(is_ready, 1);
               set_int(do_end, 0);
            }
         }
         program {
            name: "busy_anim";
            signal: "show";
            source: "";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.5;
            target: "busy";
            target: "busy_go";
            after:  "busy_anim1";
         }
         program {
            name: "busy_anim1";
            action: STATE_SET "go" 0.0;
            transition: LINEAR 1.0;
                //transition: ACCELERATE 3.0;
            target: "busy_go";
            after:  "busy_anim2";
         }
         program {
            name: "busy_anim2";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 1.0;
                //transition: ACCELERATE 3.0;
            target: "busy_go";
            after:  "busy_anim1";
         }
         program {
            name: "ready";
            script {
               new val;

               val = get_int(do_end);
               if (val == 1)
                 run_program(PROGRAM:"done2");
               else
                 set_int(is_ready, 1);
            }
         }
         program {
            name: "done1"; /* when e tells the splash screen it is done
                            * starting up, the init splash gets this signal */
            signal: "e,state,done";
            source: "e";
            script {
               new val;

               val = get_int(is_ready);
               if (val == 1)
                 run_program(PROGRAM:"done2");
               else
                 set_int(do_end, 1);
            }
         }
         program {
            name: "done2";
            action: STATE_SET "done" 0.0;
            transition: LINEAR  1.0;
            target: "confine";
            after: "done3";
         }
         program {
            name: "done4"; /* at the end signal back to e we are done shutting
                            * down the splash ans all animations are done */
            action: SIGNAL_EMIT "e,state,done_ok" "e";
         }
         program {
            name: "done3"; 
                 action:  ACTION_STOP;
            target: "busy_anim1";
            target: "busy_anim2";
            after: "done4";
         }
         /* handle a mouse down (click) event on the disable splash check
          * event area (covering both label and checkbox) */
         program {
            name: "disable_down"; /* name of program */
            signal: "mouse,down,1"; /* signal that triggers it */
            source: "disable_event"; /* source of the signal */
            action: STATE_SET "active" 0.0; /* set state to active */
            target: "disable_check"; /* these are the thngs to set to active */
            target: "disable_event";
            target: "enable_event";
            after: "disable_on"; /* and after that is done run the disable_on
                                  * program to tell e about this */
         }
         program {
            name: "enable_down";
            signal: "mouse,down,1";
            source: "enable_event";
            action: STATE_SET "default" 0.0;
            target: "disable_check";
            target: "disable_event";
            target: "enable_event";
            after: "disable_off";
         }
         /* when a user toggles the checkbox - these programs signal back to
          * e to enable or disable the splash */
         program {
            name: "disable_on";
            action: SIGNAL_EMIT "e,action,init,disable" "e";
         }
         program {
            name: "disable_off";
            action: SIGNAL_EMIT "e,action,init,enable" "e";
         }
      }
   }
   /* this group is used for other screens/xinerama zones etc. other than
    * the primary as only the primary shows the full splash - this just
    * shows the below image. it can animate etc. but not display status
    * etc. */
   group {
      name: "e/init/extra_screen";
      parts {
          
      part {
         name: "background_image";
         description {
            state: "default" 0.0;
            // min: 640 480;
              // max: 1280 1024;
            // max: 2048 1536;
            align: 0.5 0.5;
            image {
               normal: "grill_dark_tiny_pattern.png";
            }
            fill {
               size {
                  relative: 0 0;
                  offset:   144 144;
                }
             }
         }
      }

      part {
         name: "background_23Oz_tint";
          type: RECT;
         description {
            state: "default" 0.0;
            // min: 640 480;
              // max: 1280 1024;
            // max: 2048 1536;
            align: 0.5 0.5;
                color: 15 15 15 200;
         }
      }
      part {
        name: "23oz_bg_image";
        description {
            state: "default" 0.0;
            rel1 {
                relative: 0.5 0.5;
                offset: -175 -175;
            }
            rel2 {
                relative: 0.5 0.5;
                offset: 175 175;
            }
            image {
                normal: "wrk/E_Logo_1.png";
            }
        }
      }
      }
   }
   

/////////////////////////////////////////////////////////////////////////////
   /*** TOOLBAR */

#define TOOLBAR_ITEMS_BORDERS(NAME) \
part  { \
        name:  NAME"_bd_top_in"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  0  2; \
                max:  999999  2; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  0.0  0.0; \
                rel1.offset:                 2          0;  \
                rel1.to:        NAME;  \
                rel2.relative:  1.0  0.0; \
                rel2.offset:                 -3          2;  \
                rel2.to:        NAME;  \
                color_class:   "TOOLBAR_ITEMS_BORDER"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "ACTIVE_BORDER"; } \
                description { state:    "focused" 0.0; inherit:    "default" 0.0; color_class:   "HIGHLIGHT_FILES_BORDER"; } \
                description { state:    "active" 0.0; inherit:    "default" 0.0; visible: 1; color_class:   "URGENT_WINDOW"; }} \
part  { \
        name:  NAME"_bd_left_in"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  2  0; \
                max:  2  999999 ; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  0.0  0.0; \
                rel1.offset:                 0          0;  \
                rel1.to:        NAME;  \
                rel2.relative:  0.0  1.0; \
                rel2.offset:                 2          -1;  \
                rel2.to:        NAME;  \
                color_class:   "TOOLBAR_ITEMS_BORDER"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "ACTIVE_BORDER"; } \
                description { state:    "focused" 0.0; inherit:    "default" 0.0; color_class:   "HIGHLIGHT_FILES_BORDER"; } \
                description { state:    "active" 0.0; inherit:    "default" 0.0; visible: 1; color_class:   "URGENT_WINDOW"; }} \
part  { \
        name:  NAME"_bd_bottom_in"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  0  2; \
                max:  999999  2; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  0.0  1.0; \
                rel1.offset:                 2          -2;  \
                rel1.to:        NAME;  \
                rel2.relative:  1.0  1.0; \
                rel2.offset:                 -3          -1;  \
                rel2.to:        NAME;  \
                color_class:   "TOOLBAR_ITEMS_BORDER"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "SCROLLBAR_BORDER_DISABLED"; } \
                description { state:    "focused" 0.0; inherit:    "default" 0.0; color_class:   "HIGHLIGHT_FILES_BORDER"; } \
                description { state:    "active" 0.0; inherit:    "default" 0.0; visible: 1; color_class:   "URGENT_WINDOW"; }} \
part  { \
        name:  NAME"_bd_right_in"; \
        type: RECT; \
        mouse_events:  0; \
                description { \
                min:  2  0; \
                max:  2  999999 ; \
                state:    "default" 0.0; \
                visible:  1; \
                rel1.relative:  1.0  0.0; \
                rel1.offset:                 -2          0;  \
                rel1.to:        NAME;  \
                rel2.relative:  1.0  1.0; \
                rel2.offset:                 -1         -1;  \
                rel2.to:        NAME;  \
                color_class:   "TOOLBAR_ITEMS_BORDER"; }  description { state:  "disabled" 0.0;  inherit: "default" 0.0;  color_class: "SCROLLBAR_BORDER_DISABLED"; } \
                description { state:    "focused" 0.0; inherit:    "default" 0.0; color_class:   "HIGHLIGHT_FILES_BORDER"; } \
                description { state:    "active" 0.0; inherit:    "default" 0.0; visible: 1; color_class:   "TRANSPARENT"; }}



   group { name: "e/widgets/toolbar";
      images {
         //image: "bt_dis_base.png" COMP;
         //image: "bt_dis_hilight.png" COMP;
         //image: "bt_dis_shine.png" COMP;
         image: "./icons/previous.png" COMP;
         image: "./icons/next.png" COMP;
      }
         parts  {
          
         part {
            name:          "button_image";
            type: RECT;
            description {
               state:    "default" 0.0;
               color_class:         "TRANSPARENT";
            }
         }
                 
                 // TOOLBAR_ITEMS_BORDERS("button_image");
                 
         part { name: "clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "button_image";
                  // offset: 2 2;
               }
               rel2 {
                  to: "button_image";
                  // offset: -3 -3;
               }
            }
         }
         
         part { name: "e.swallow.content";
            clip_to: "clipper";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.relative:          1.0  0.0;
               rel1.to_y: "clipper";
                        rel1.to_x: "left_arrow";
               rel2.relative:          0.0  1.0;
               rel2.to_y: "clipper";
                        rel2.to_x: "right_arrow";
            }
         }
         /*
         part { name: "over2";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               image {
                  normal: "bt_dis_shine.png";
                  border: 4 4 4 4;
               }
            }
         }
         part { name: "over1";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               rel2.relative: 1.0 0.5;
               image {
                  normal: "bt_dis_hilight.png";
                  border: 4 4 4 0;
               }
            }
         }*/
         part { name: "left_arrow";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               image.normal: "./icons/previous.png";
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               min: 32 32;
               max: 32 32;
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               color_class:         "TRANSPARENT";
            }
         }
         part { name: "right_arrow";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               image.normal: "./icons/next.png";
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
               min: 32 32;
               max: 32 32;
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               color_class:         "TRANSPARENT";
            }
         }
         part { name: "event";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "sb_hbar_show";
            signal: "e,action,show,hbar";
            source: "e";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 0.5;
            target: "left_arrow";
            target: "right_arrow";
                        after:         "animate1";
         }
         program { name: "animate1";
            action:  STATE_SET "hidden" 0.0;
            transition: LINEAR 1.5;
            target: "left_arrow";
            target: "right_arrow";
                        after:         "animate2";
         }
         program { name: "animate2";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 1.5;
            target: "left_arrow";
            target: "right_arrow";
                        after:         "animate1";
         }
         program { name: "sb_hbar_hide1";
            signal: "e,action,hide,hbar";
            source: "e";
            action:  ACTION_STOP;
            target:  "animate1";
            target:  "animate2";
            transition: LINEAR 0.5;
                        after:         "sb_hbar_hide2";
         }
         program { name: "sb_hbar_hide2";
            action:  STATE_SET "hidden" 0.0;
            target: "left_arrow";
            target: "right_arrow";
            //transition: LINEAR 0.5;
         }
                 /*
                    program {
            name:    "focused";
            signal:  "focused";
            source:  "";
            action:  STATE_SET "focused" 0.0;
            transition: LINEAR 0.5;
            //target:  "button_image_bd_top_in";
            //target:  "button_image_bd_left_in";
            //target:  "button_image_bd_right_in";
            //target:  "button_image_bd_bottom_in";
         }
         program {
            name:    "unfocused";
            signal:  "unfocused";
            source:  "";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 0.5;
            //target:  "button_image_bd_top_in";
            //target:  "button_image_bd_left_in";
            //target:  "button_image_bd_right_in";
            //target:  "button_image_bd_bottom_in";
         }
                 */
                 
                 
      }
   }

   group { name: "e/widgets/toolbar/item";
      images {
        // image: "toolbar_sel.png" COMP;
      }
      parts {
         /*
         part { name: "bg";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               image {
                  normal: "toolbar_sel.png";
                  border: 3 3 0 0;
               }
               fill.smooth: 0;
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         */
                 
         part {
            name:          "button_image";
            type: RECT;
            mouse_events:  1;
            description {
               state:    "default" 0.0;
               //min:      56 16;
               // bigger so we have some room for text - fuck it
               min:      1 12;
                                align:         0.5  0.5;
               color_class:         "TASKBAR_ITEMS";
               rel1 {
                  relative: 0.0 0.0;
                                  offset:   1   4;
               }
               rel2 {
                  relative: 1.0 1.0;
                                  offset:  -2  -5;
               }
            }
            description {
               state:    "iconified" 0.0;
               inherit:  "default" 0.0;
               rel1 {
                  relative: 0.0 0.3;
                                  offset:   0   4;
               }
            }
            description {
               state:    "focused" 0.0;
               inherit:  "default" 0.0;
            }
         }
                 
                 TOOLBAR_ITEMS_BORDERS("button_image");

         part { name: "label2";
            type: TEXT;
            mouse_events:  0;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.5 1.0;
               fixed: 0 1;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
               color_class:  "TOOLBAR_FONT_INACTIVE";
              text {
          //font: "Sans:style=Bold";
          font: "Sans";
                  text_source: "e.text.label";
                  size:  11;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "fileman_icon";
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               color_class:  "TRANSPARENT";
            }
         }
         part { name: "e.swallow.icon";
            type: SWALLOW;
            description { state: "default" 0.0;
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1 {
                  relative: 0.0 0.0;
                  // offset: 2 2;
                  offset: 2  7;
               }
               rel2 {
                  to_y: "e.text.label";
                  relative: 1.0 0.0;
                  offset: -3 -1;
               }
               color: 0 0 0 0;
            }
         }
         part { name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events:  0;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.5 1.0;
               fixed: 0 1;
               rel1 {
                  relative: 0.0 1.0;
                  offset:   3  -1;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset:   -1 -1;
               }
               visible: 0;
               color_class:  "TOOLBAR_FONT";
               text {
           font: "Sans:style=Bold";
                  size:  11;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "fileman_icon";
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "event";
            type: RECT;
            mouse_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "go_active";
            signal:  "e,state,selected";
            source:  "e";
            action:  STATE_SET "focused" 0.0;
            target:  "button_image";
        target:  "button_image_bd_top_in";
        target:  "button_image_bd_left_in";
        target:  "button_image_bd_right_in";
        target:  "button_image_bd_bottom_in";
            target:  "e.text.label";
            target:  "label2";
            // transition: LINEAR 0.2;
         }
         program { name: "go_passive";
            signal:  "e,state,unselected";
            source:  "e";
            action:  STATE_SET "default" 0.0;
            target:  "button_image";
        target:  "button_image_bd_top_in";
        target:  "button_image_bd_left_in";
        target:  "button_image_bd_right_in";
        target:  "button_image_bd_bottom_in";
            target:  "e.text.label";
            target:  "label2";
            // transition: LINEAR 0.1;
         }
         program { name: "go";
            signal:  "mouse,up,1";
            source:  "event";
            action:  SIGNAL_EMIT "e,action,click" "e";
         }
      }
   }
